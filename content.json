{"meta":{"title":"huijiang的记事本","subtitle":"hello","description":"yyds","author":"huijiang","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2023-01-07T01:55:25.591Z","updated":"2023-01-07T01:55:25.591Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"Hello，欢迎访问灰酱的小破站。灰酱现在是一名刚毕业半年出来上班就受到社会的各种毒打的小萌新，博客会不定时更新，主要分享技术方面和我的日常。"},{"title":"标签","date":"2018-01-04T16:00:00.000Z","updated":"2023-01-06T23:42:03.824Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-01-04T16:00:00.000Z","updated":"2023-01-06T23:38:04.432Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"随笔三","slug":"随笔三","date":"2023-01-08T07:20:12.000Z","updated":"2023-01-08T07:49:48.807Z","comments":true,"path":"2023/01/08/随笔三/","link":"","permalink":"http://example.com/2023/01/08/%E9%9A%8F%E7%AC%94%E4%B8%89/","excerpt":"","text":"新的一年，希望各位都能有个新的开始。我在新年的第一天就风尘仆仆地赶回老家，参加完高中同学的婚礼后，又急匆匆地回到了武汉。 路途虽然遥远，但也饶有风趣：坐地铁头次被一群老外围着问江汉路站台的位置在哪，却羞于表达而紧张到答非所问，导致自己开始怀疑自己的英语水平，好像白学了那么多年英语；久别重逢的好基友预定好了酒店后，翻来覆去睡不着，便不停地闲聊过去的往事，直至凌晨才睡；被新郎点上台抢新娘子的手捧花，却没有抢到。 老同学们那熟悉的面孔让我回忆起高中的很多陈年旧事，以及他们与我一起经历过的快乐和痛苦。眼看着身边的同学一个个都步入婚姻的殿堂，他们在婚礼舞台上那掩饰不住的笑容，心里也不由得为他们感到高兴，这也意味着大家结婚后都会更倾向于过好各自的小日子，相聚机会也会越来越少，待到重逢之时又是何年何月?或许这也是常态吧，毕竟每个人都要为生活四处奔波，天下也没有不散的宴席。再转过头来看看自己，想要亲身体验到这种幸福感还有很远的路要走。 有人住高楼，有人在深沟，有人光万丈，有人一身锈，世人万千种，浮云莫去求，斯人若彩虹，遇上方知有。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"日常","slug":"日常","permalink":"http://example.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"感慨","slug":"感慨","permalink":"http://example.com/tags/%E6%84%9F%E6%85%A8/"},{"name":"婚姻","slug":"婚姻","permalink":"http://example.com/tags/%E5%A9%9A%E5%A7%BB/"}]},{"title":"随笔二","slug":"随笔二","date":"2023-01-08T07:20:05.000Z","updated":"2023-01-08T07:36:12.425Z","comments":true,"path":"2023/01/08/随笔二/","link":"","permalink":"http://example.com/2023/01/08/%E9%9A%8F%E7%AC%94%E4%BA%8C/","excerpt":"","text":"前段时间，突然阳了，便请假回家休息了大概一个星期左右。在家休息的这段时间让我看清了同事之间所谓的人间情怀。 平日里那些跟我无所不谈，关系融洽的同事们，没有一个对我的身体情况以及恢复的如何感兴趣，领导也在督促着我要完成该要完成的任务，貌似对我阳了的事情并不怎么关心。我一直寻思着，平时我都待这些同事不薄，都会尽力地想着与他们好好去相处，但在我遇到困难之时，一个个就想要疏远我，但是想想就觉得没啥，因为想的太多又过于自作多情。只不过是对于周围同事的这种为人处世态度，感到诧异。 生而为人，我们之间多多少少需要些“人情味”，毕竟不是冷血动物，能认识就是一种缘分。 在最艰难的时刻我们要建立人与人之间的连接，相互扶持相互鼓励。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"日常","slug":"日常","permalink":"http://example.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"人情世故","slug":"人情世故","permalink":"http://example.com/tags/%E4%BA%BA%E6%83%85%E4%B8%96%E6%95%85/"},{"name":"感慨","slug":"感慨","permalink":"http://example.com/tags/%E6%84%9F%E6%85%A8/"}]},{"title":"C++ Primer学习笔记-基础类型","slug":"C-Primer学习笔记-基础类型","date":"2023-01-08T06:53:05.000Z","updated":"2023-01-08T07:19:02.338Z","comments":true,"path":"2023/01/08/C-Primer学习笔记-基础类型/","link":"","permalink":"http://example.com/2023/01/08/C-Primer%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E7%B1%BB%E5%9E%8B/","excerpt":"","text":"算数类型有整形，浮点型，字符，布尔类型。 空类型，即void。 其中，整形和浮点型包含带符号和不带符号（unsigned）。带符号的类型可以表示正数、负数和0，无符号类型只能表示0和正数。 正常的情况下，字符类型一般占一个字节，即8Bits，unsigne char一般表示整型0-255的范围，char一般表示为-127-127的范围。 类型转换包括隐式转换和显式转换两种，这里先讲隐式转换，当中比较重要的一点就是，当我们给一个无符号类型的变量赋一个超出它本身范围的值时，其结果会变成初始值对该无符号类型范围最大值取模后的余数。例如，-1赋给unsigned时，-1%256&#x3D;255，结果为255。 举一些比较有意思的例子： 123unsigned u=10;int i=-42;std::cout&lt;&lt;u+i&lt;&lt;std::endl; 当上面的u与i相加时，i会转变成无符号类型unsigned int，把-42赋给无符号类型整数，然后再与u相加，得出一个非预期的结果，具体需要看机器是多少位的。 12for(unsigned i=10;i&gt;=0;--i) std::cout&lt;&lt;i&lt;&lt;std::endl; 上面的结果是：循环永远不会结束。因为在循环到-1时，unsigned没法表示-1，因此会将-1转换成unsigned int类型，得出一个很大的整数，最后导致死循环。 切勿混用带符号类型和无符号类型。 字面值常量表示的是值的本身，如42表示整型字面量，true表示bool型字面量 整型字面量可以用十进制，八进制（0开头），十六进制（0x或0X开头）来表示，如42，042，0xF等。 字符串字面值结尾会带’\\0’来标识字符串结束，单引号用于表示单个字符，双引号用于表示单个字符串。 123456char c = &#x27;a&#x27;;std::string str = &quot;a string&quot;;std::cout &lt;&lt; &quot;a long string string string&quot; &quot;string a string &quot; &lt;&lt; std::endl;//遇到过长的字符串时，可以分多行来进行表示//上述表示&quot;a long string string string string a string&quot;这单独的一个字符串 转义字符用于表示一类特殊含义的字符和一类特殊标点符号的字符（？等）","categories":[{"name":"C/C++","slug":"C-C","permalink":"http://example.com/categories/C-C/"}],"tags":[{"name":"编程语言","slug":"编程语言","permalink":"http://example.com/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"},{"name":"C++","slug":"C","permalink":"http://example.com/tags/C/"}]},{"title":"随笔一","slug":"随笔一","date":"2023-01-07T03:15:33.000Z","updated":"2023-01-08T07:27:26.440Z","comments":true,"path":"2023/01/07/随笔一/","link":"","permalink":"http://example.com/2023/01/07/%E9%9A%8F%E7%AC%94%E4%B8%80/","excerpt":"","text":"前段时间在B站写专栏，发现了一个很头疼的问题：每篇文章在提交审核通过后只允许修改三次（吐血），我就想着找另外一些方式来记录博客。 在跟同学谈到写博客方面时，同学说我为啥不自己搭建一个私人博客。我想了想，哎，也对啊，无非就是又要去学一些新技术而已，问题不大，于是抱着试一试的想法，查阅了相关资料。 网上的大佬很给了很多相关建议，大致有两种方案：要么就是自己买个服务器和域名，自己写页面和后台逻辑，要么就是用GitHub来搭。前一种的思路倒是很寻常的一种方式，但是后面一种我是压根听都没听说过，于是乎，我又查阅了一些相关的案例，发现用GitHub搭建起来几乎0成本，而且学习成本也不大。头一次接触到Hexo框架，对我来说，这玩意真是个新奇事儿。啪的一下很快啊，我就开始着手修改相关配置文件和学了一些markdown的用法，就有了现在这样的Bolg。 建这个Bolg基本没有用到什么非常有含金量的技术，主要就是改改yaml配置文件（我压根就没学过yaml，学了也忘了），而且公司的事情很多，加上我只想多写些博客，专注于博客的内容，而不是真跑去重新捡回学过的前端知识，那样太费劲了！俺暂时还不想花那么多时间学这些用不上的知识，毕竟我的主攻方向是Linux开发方面。 好了，也就唠嗑唠到这了，也感谢那些在我B站博客下面学习的小伙伴们在支持着我（虽然只有每篇文章评价只十几的浏览量），想要看我的文章，请后续继续关注本站，本站也不停地完善中，后面会越来越花里胡哨（滑稽）。","categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"}],"tags":[{"name":"日常","slug":"日常","permalink":"http://example.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}],"categories":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/categories/%E9%9A%8F%E7%AC%94/"},{"name":"C/C++","slug":"C-C","permalink":"http://example.com/categories/C-C/"}],"tags":[{"name":"日常","slug":"日常","permalink":"http://example.com/tags/%E6%97%A5%E5%B8%B8/"},{"name":"感慨","slug":"感慨","permalink":"http://example.com/tags/%E6%84%9F%E6%85%A8/"},{"name":"婚姻","slug":"婚姻","permalink":"http://example.com/tags/%E5%A9%9A%E5%A7%BB/"},{"name":"人情世故","slug":"人情世故","permalink":"http://example.com/tags/%E4%BA%BA%E6%83%85%E4%B8%96%E6%95%85/"},{"name":"编程语言","slug":"编程语言","permalink":"http://example.com/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"},{"name":"C++","slug":"C","permalink":"http://example.com/tags/C/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}